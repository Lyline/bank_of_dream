package fr.GCQuesne;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import static fr.GCQuesne.ListAccount.myAccount;
import static fr.GCQuesne.Project.myListAccount;


public class IndexAppliGUI extends JPanel {
  static String enteredAccount;
  JLabel imgBackground;
  JPanel mainPanel;
  JRadioButton createAccountRadioBtn;
  JRadioButton addAccountingRecordRadioBtn;
  JPanel numberAccount;
  JPanel accountAction;
  JLabel accountNumberLabel;
  JRadioButton printAccountRadioBtn;
  JButton accountSelectBtn;
  JTextField enterAccountNumberTextField;
  JLabel errorMessageLabel;


  public IndexAppliGUI() {
    accountSelectBtn.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        enteredAccount = enterAccountNumberTextField.getText();

        if (enterAccountNumberTextField.getText().isEmpty()) {
          errorMessageLabel.setText("ENTRER UN NUMERO DE COMPTE");
          errorMessageLabel.setVisible(true);
        }

        if (createAccountRadioBtn.isSelected() && !enterAccountNumberTextField.getText().isEmpty()) {
          openNewWindow(new CreateAccountGUI().mainPanel, "- Création d'un compte -");
        }

        if (addAccountingRecordRadioBtn.isSelected() && !enterAccountNumberTextField.getText().isEmpty()) {
          myAccount = myListAccount.selectAccount(enteredAccount);
          if (myAccount != null)
            openNewWindow(new AccountingRecordGUI().mainPanel, "- Ajout d'une ligne comptable -");
          else {
            errorMessageLabel.setVisible(true);
            errorMessageLabel.setText("NUMERO DE COMPTE INCONNU");
          }
        }

        if (printAccountRadioBtn.isSelected() && !enterAccountNumberTextField.getText().isEmpty())
          openNewWindow(new PrintLineAccountGUI().mainPanel, "- Edition d'un compte -");

      }
    });

    enterAccountNumberTextField.addCaretListener(new CaretListener() {
      @Override
      public void caretUpdate(CaretEvent e) {
        enterAccountNumberTextField = (JTextField) e.getSource();
      }
    });
  }

  public void createUIComponents() {

  }

  public static void openNewWindow(Container nameWindow, String titleWindow) {
    JFrame createWindow = new JFrame(titleWindow);
    createWindow.setContentPane(nameWindow);
    createWindow.setLocation(1400, 200);
    createWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    createWindow.pack();
    createWindow.setVisible(true);
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR call it in your
   * code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    mainPanel = new JPanel();
    mainPanel.setLayout(new BorderLayout(0, 0));
    mainPanel.setAutoscrolls(true);
    mainPanel.setBackground(new Color(-3100784));
    mainPanel.setDoubleBuffered(false);
    mainPanel.setEnabled(true);
    mainPanel.setFocusTraversalPolicyProvider(true);
    Font mainPanelFont = this.$$$getFont$$$(null, -1, -1, mainPanel.getFont());
    if (mainPanelFont != null) mainPanel.setFont(mainPanelFont);
    mainPanel.setForeground(new Color(-14342875));
    mainPanel.setMaximumSize(new Dimension(450, 600));
    mainPanel.setMinimumSize(new Dimension(450, 600));
    mainPanel.setOpaque(true);
    mainPanel.setPreferredSize(new Dimension(450, 630));
    mainPanel.setVisible(true);
    mainPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.CENTER, TitledBorder.DEFAULT_POSITION, null, null));
    imgBackground = new JLabel();
    imgBackground.setForeground(new Color(-14342875));
    imgBackground.setIcon(new ImageIcon(getClass().getResource("/img/index_bkg.jpg")));
    imgBackground.setText("");
    mainPanel.add(imgBackground, BorderLayout.SOUTH);
    accountAction = new JPanel();
    accountAction.setLayout(new GridBagLayout());
    accountAction.setAutoscrolls(true);
    accountAction.setBackground(new Color(-3100784));
    mainPanel.add(accountAction, BorderLayout.NORTH);
    accountAction.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Comptes", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Arial Rounded MT Bold", Font.BOLD | Font.ITALIC, 16, accountAction.getFont()), new Color(-14342875)));
    addAccountingRecordRadioBtn = new JRadioButton();
    addAccountingRecordRadioBtn.setBackground(new Color(-3100784));
    addAccountingRecordRadioBtn.setForeground(new Color(-14342875));
    addAccountingRecordRadioBtn.setPreferredSize(new Dimension(200, 50));
    addAccountingRecordRadioBtn.setText("Ajouter un ligne comptable");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.WEST;
    accountAction.add(addAccountingRecordRadioBtn, gbc);
    printAccountRadioBtn = new JRadioButton();
    printAccountRadioBtn.setBackground(new Color(-3100784));
    Font printAccountRadioBtnFont = this.$$$getFont$$$(null, -1, -1, printAccountRadioBtn.getFont());
    if (printAccountRadioBtnFont != null) printAccountRadioBtn.setFont(printAccountRadioBtnFont);
    printAccountRadioBtn.setForeground(new Color(-14342875));
    printAccountRadioBtn.setPreferredSize(new Dimension(200, 50));
    printAccountRadioBtn.setText("Editer un compte");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    accountAction.add(printAccountRadioBtn, gbc);
    createAccountRadioBtn = new JRadioButton();
    createAccountRadioBtn.setBackground(new Color(-3100784));
    createAccountRadioBtn.setForeground(new Color(-14342875));
    createAccountRadioBtn.setMargin(new Insets(2, 2, 2, 2));
    createAccountRadioBtn.setMaximumSize(new Dimension(89, 50));
    createAccountRadioBtn.setMinimumSize(new Dimension(89, 50));
    createAccountRadioBtn.setPreferredSize(new Dimension(200, 50));
    createAccountRadioBtn.setSelected(true);
    createAccountRadioBtn.setText("Créer un nouveau compte");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.anchor = GridBagConstraints.WEST;
    accountAction.add(createAccountRadioBtn, gbc);
    errorMessageLabel = new JLabel();
    errorMessageLabel.setEnabled(true);
    errorMessageLabel.setForeground(new Color(-4507333));
    errorMessageLabel.setText("ENTRER UN NUMERO DE COMPTE");
    errorMessageLabel.setVisible(false);
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.WEST;
    accountAction.add(errorMessageLabel, gbc);
    numberAccount = new JPanel();
    numberAccount.setLayout(new FlowLayout(FlowLayout.CENTER, 30, 50));
    numberAccount.setBackground(new Color(-3100784));
    numberAccount.setEnabled(true);
    numberAccount.setFocusable(true);
    Font numberAccountFont = this.$$$getFont$$$("Arial Rounded MT Bold", Font.BOLD | Font.ITALIC, 22, numberAccount.getFont());
    if (numberAccountFont != null) numberAccount.setFont(numberAccountFont);
    numberAccount.setForeground(new Color(-14342875));
    numberAccount.setMaximumSize(new Dimension(2147483647, 21));
    numberAccount.setMinimumSize(new Dimension(117, 21));
    mainPanel.add(numberAccount, BorderLayout.CENTER);
    numberAccount.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Numéro :", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$("Arial Rounded MT Bold", Font.BOLD | Font.ITALIC, 16, numberAccount.getFont()), new Color(-14342875)));
    accountNumberLabel = new JLabel();
    accountNumberLabel.setForeground(new Color(-14342875));
    accountNumberLabel.setHorizontalAlignment(2);
    accountNumberLabel.setHorizontalTextPosition(2);
    accountNumberLabel.setText("Numéro :");
    numberAccount.add(accountNumberLabel);
    enterAccountNumberTextField = new JTextField();
    enterAccountNumberTextField.setBackground(new Color(-5468041));
    enterAccountNumberTextField.setColumns(18);
    enterAccountNumberTextField.setForeground(new Color(-14342875));
    enterAccountNumberTextField.setMargin(new Insets(2, 6, 2, 6));
    enterAccountNumberTextField.setPreferredSize(new Dimension(204, 30));
    enterAccountNumberTextField.setSelectionEnd(0);
    enterAccountNumberTextField.setSelectionStart(0);
    enterAccountNumberTextField.setText("");
    enterAccountNumberTextField.setVerifyInputWhenFocusTarget(true);
    enterAccountNumberTextField.setVisible(true);
    numberAccount.add(enterAccountNumberTextField);
    accountSelectBtn = new JButton();
    accountSelectBtn.setBackground(new Color(-5468041));
    accountSelectBtn.setForeground(new Color(-14342875));
    accountSelectBtn.setHideActionText(false);
    accountSelectBtn.setText("Sélectionner");
    numberAccount.add(accountSelectBtn);
    ButtonGroup buttonGroup;
    buttonGroup = new ButtonGroup();
    buttonGroup.add(addAccountingRecordRadioBtn);
    buttonGroup.add(printAccountRadioBtn);
    buttonGroup.add(createAccountRadioBtn);
  }

  /** @noinspection ALL */
  private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
    if (currentFont == null) return null;
    String resultName;
    if (fontName == null) {
      resultName = currentFont.getName();
    } else {
      Font testFont = new Font(fontName, Font.PLAIN, 10);
      if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
        resultName = fontName;
      } else {
        resultName = currentFont.getName();
      }
    }
    return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
  }

  /** @noinspection ALL */
  public JComponent $$$getRootComponent$$$() {
    return mainPanel;
  }

}
